{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASE,IAAI,CAACC,KAAK,EAAE;EAChC,IAAIC,OAAO,GAAGD,KAAK,CAACE,UAAU,CAACD,OAAO,EAAC;EACvC,IAAIE,OAAO,GAAGH,KAAK,CAACE,UAAU,CAACC,OAAO,EAAC;;EAEvC,SAASC,eAAe,CAACC,OAAO,EAAE;IAC9BL,KAAK,CAACM,aAAa,CAAC;MAAEL,OAAO,EAAEI;IAAQ,CAAC,CAAC;EAC7C;EAEA,SAASE,eAAe,CAACF,OAAO,EAAE;IAC9BL,KAAK,CAACM,aAAa,CAAC;MAAEH,OAAO,EAAEE;IAAQ,CAAC,CAAC;EAC7C;EAEA,OAAS;IACD,EAAE,EAAG;EAAmB,aAAiF,yHAC3D,OAAC,oJACyB,OAAC,+FAClD,OAAC,kEAC5B,6DAAQ;IAAC,SAAS,EAAKL,KAAK,CAACQ,SAAW,CAAC;IAAA;IACzC,QAAQ,EAAKJ,eAAiB,CAAC;IAAA;IAC/B,KAAK,EAAKH,OAAS,CAAC;IAAA;IACpB,WAAW,EAAG;EAAc,EAC3B,EACD,+FAC2B,OAAC,kEAC5B,6DAAQ;IAAC,SAAS,EAAKD,KAAK,CAACQ,SAAW,CAAC;IAAA;IACzC,QAAQ,EAAKD,eAAiB,CAAC;IAAA;IAC/B,KAAK,EAAKJ,OAAS,CAAC;IAAA;IACpB,WAAW,EAAG;EAAe,EAC5B,CAEI;AAEb;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASO,IAAI,GAAG;EAC3B,OAAO,IAAI;AACf;;;;;;;;;;;AC1BA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACsD;AACjB;AACc;;AAEnD;AACA;AACA;AAC0B;AACA;;AAE1B;AACA;AACA;AACAC,oEAAiB,CACb,uCAAuC;AAAE;AACzC;EACIC,KAAK,EAAEf,mDAAE,CAAC,4BAA4B,CAAC;EAAE;EACzCgB,IAAI,EAAE,sBAAsB;EAAE;EAC9BC,QAAQ,EAAE,QAAQ;EAAE;;EAEpB;AACR;AACA;AACA;EACQZ,UAAU,EAAE;IACR;IACA;IACA;IACAD,OAAO,EAAE;MACLc,IAAI,EAAE;IACV,CAAC;IACD;IACA;IACA;IACAZ,OAAO,EAAE;MACLY,IAAI,EAAE;IACV;EACJ,CAAC;EACD;AACR;AACA;EACQC,IAAI,EAAEjB,6CAAI;EAEV;AACR;AACA;EACQW,IAAIA,+CAAAA;AACR,CAAC,CAAC,C","sources":["webpack://q-agency-block/./src/edit.js","webpack://q-agency-block/./src/save.js","webpack://q-agency-block/./src/editor.scss","webpack://q-agency-block/external window [\"wp\",\"blockEditor\"]","webpack://q-agency-block/external window [\"wp\",\"blocks\"]","webpack://q-agency-block/external window [\"wp\",\"element\"]","webpack://q-agency-block/external window [\"wp\",\"i18n\"]","webpack://q-agency-block/webpack/bootstrap","webpack://q-agency-block/webpack/runtime/compat get default export","webpack://q-agency-block/webpack/runtime/define property getters","webpack://q-agency-block/webpack/runtime/hasOwnProperty shorthand","webpack://q-agency-block/webpack/runtime/make namespace object","webpack://q-agency-block/./src/index.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { RichText } from '@wordpress/block-editor';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit(props) {\n    var number1 = props.attributes.number1 // To bind attribute number 1\n    var number2 = props.attributes.number2 // To bind attribute number 2\n\n    function onChangeNumber1(content) {\n        props.setAttributes({ number1: content })\n    }\n\n    function onChangeNumber2(content) {\n        props.setAttributes({ number2: content })\n    }\n\n    return ( <\n        div id = \"block-dynamic-box\" > { /* You have to have a wrapper tag when your markup has more than 1 tag */ } <\n        h1 > Sample dynamic PHP server - side block < /h1> <\n        p > This block will sum the numbers and render HTML on the server side < /p> <\n        label > Number 1: < /label> <\n        RichText className = { props.className } // Automatic class: gutenberg-blocks-sample-block-editable\n        onChange = { onChangeNumber1 } // onChange event callback\n        value = { number1 } // Binding\n        placeholder = \"First number\" /\n        >\n        <\n        label > Number 2: < /label> <\n        RichText className = { props.className } // Automatic class: gutenberg-blocks-sample-block-editable\n        onChange = { onChangeNumber2 } // onChange event callback\n        value = { number2 } // Binding\n        placeholder = \"Second number\" /\n        >\n        <\n        /div>\n    )\n}","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save() {\n    return null\n}","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { RichText } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\n\n/**\n * Every block starts by registering a new block type definition.\n */\nregisterBlockType(\n    'gutenberg-blocks-sample/block-dynamic', // Name of the block with a required name space\n    {\n        title: __('Dynamic Sum Block (Sample)'), // Title, displayed in the editor\n        icon: 'universal-access-alt', // Icon, from WP icons\n        category: 'common', // Block category, where the block will be added in the editor\n\n        /**\n         * Object with all binding elements between the view HTML and the functions\n         * It lets you bind data from DOM elements and storage attributes\n         */\n        attributes: {\n            // Number 1\n            // It doesn't use source attribute, so it doesn't come from save() rendered DOM\n            // They'll be saved on the block's source code as a JSON\n            number1: {\n                type: 'string',\n            },\n            // Number 2\n            // It doesn't use source attribute, so it doesn't come from save() rendered DOM\n            // They'll be saved on the block's source code as a JSON\n            number2: {\n                type: 'string',\n            },\n        },\n        /**\n         * @see ./edit.js\n         */\n        edit: Edit,\n\n        /**\n         * @see ./save.js\n         */\n        save,\n    });"],"names":["__","RichText","Edit","props","number1","attributes","number2","onChangeNumber1","content","setAttributes","onChangeNumber2","className","useBlockProps","save","registerBlockType","title","icon","category","type","edit"],"sourceRoot":""}